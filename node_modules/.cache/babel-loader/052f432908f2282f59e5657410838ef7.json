{"ast":null,"code":"import * as services from '../../services/UserServices';\nimport * as types from '../types'; //Load post from server to state\n// export const LoadUsers = () => {\n//     return async (dispatch) => {\n//         try {\n//             console.log(\"Before GET\");\n//             const users = await services.GetUsers()\n//             console.log(users, \"After GET\");\n//             dispatch({\n//                 type: types.GET_USERS,\n//                 payload: users\n//             })            \n//         } catch (error) {\n//             throw error\n//         }\n//     }\n// }\n\nexport const LoadUserDetails = id => {\n  return async dispatch => {\n    try {\n      console.log('before GET');\n      const user = await services.GetUserDetail(id);\n      console.log(user, \"after GET\");\n      dispatch({\n        type: types.GET_USER_DETAIL,\n        payload: user\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n_c = LoadUserDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadUserDetails\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/store/actions/UserActions.js"],"names":["services","types","LoadUserDetails","id","dispatch","console","log","user","GetUserDetail","type","GET_USER_DETAIL","payload","err"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,6BAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ;AACnC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,aAAT,CAAuBL,EAAvB,CAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,WAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAER,KAAK,CAACS,eADP;AAELC,QAAAA,OAAO,EAAEJ;AAFJ,OAAD,CAAR;AAIH,KARD,CAQE,OAAOK,GAAP,EAAY;AACV,YAAMA,GAAN;AACH;AACJ,GAZD;AAaH,CAdM;KAAMV,e","sourcesContent":["import * as services from '../../services/UserServices'\nimport * as types from '../types'\n\n\n//Load post from server to state\n// export const LoadUsers = () => {\n//     return async (dispatch) => {\n//         try {\n//             console.log(\"Before GET\");\n            \n//             const users = await services.GetUsers()\n//             console.log(users, \"After GET\");\n//             dispatch({\n//                 type: types.GET_USERS,\n//                 payload: users\n//             })            \n//         } catch (error) {\n//             throw error\n//         }\n//     }\n// }\n\nexport const LoadUserDetails = (id) => {\n    return async (dispatch) => {\n        try {\n            console.log('before GET');\n            const user = await services.GetUserDetail(id)\n            console.log(user, \"after GET\")\n            dispatch({\n                type: types.GET_USER_DETAIL,\n                payload: user\n            })\n        } catch (err) {\n            throw err\n        }\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}