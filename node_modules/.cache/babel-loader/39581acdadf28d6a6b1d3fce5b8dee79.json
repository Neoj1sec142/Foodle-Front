{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react'; // import { LoadUserDetails } from '../store/actions/UserActions'\n\nimport { GetUserDetailByUsername } from '../services/UserServices';\nimport { GetPostByUserId } from '../services/PostServices';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const thisProfileUser = params.username;\n  const [profileUser, setProfileUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  console.log(props, \"PROPS\");\n  useEffect(() => {\n    if (thisProfileUser) {\n      const getUserData = async () => {\n        const data = await GetUserDetailByUsername(thisProfileUser);\n        setProfileUser(data);\n      };\n\n      getUserData();\n    }\n  }, [thisProfileUser, props.user]);\n  useEffect(() => {\n    const getPostsByProfileUser = async () => {\n      if (profileUser.id) {\n        const posts = await GetPostByUserId(profileUser.id); // FIX THIS\n\n        console.log(\"GETPOSTS BY PROF USER\", profileUser, posts);\n        setPosts(posts);\n      }\n    };\n\n    getPostsByProfileUser();\n  }, [profileUser]);\n\n  const goToUpdate = () => {\n    navigate('update');\n  };\n\n  console.log(\"THIS PROFILE USER\", thisProfileUser);\n\n  if (profileUser.id && props.authenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", profileUser.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), props.user.username === thisProfileUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToUpdate(),\n              children: \"Edit your profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 64\n            }, this) : \"no edit\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: profileUser.profileImg,\n                alt: \"thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Name: \", profileUser.fullname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Email: \", profileUser.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profileUser.profileDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container\",\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, 'i', false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(Profile, \"HHPeIzgLZ+RVR4faVNKjN9cpwYQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js"],"names":["useParams","useNavigate","React","useState","useEffect","GetUserDetailByUsername","GetPostByUserId","Post","Profile","props","navigate","params","thisProfileUser","username","profileUser","setProfileUser","posts","setPosts","console","log","getUserData","data","user","getPostsByProfileUser","id","goToUpdate","authenticated","profileImg","fullname","email","profileDescription","map","post","i"],"mappings":"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","sourcesContent":["\nimport { useParams, useNavigate } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\n// import { LoadUserDetails } from '../store/actions/UserActions'\nimport { GetUserDetailByUsername } from '../services/UserServices'\nimport { GetPostByUserId } from '../services/PostServices'\nimport Post from '../components/Post'\n\n\nconst Profile = (props) => {\n    const navigate = useNavigate()\n    const params = useParams()\n    const thisProfileUser = params.username\n\n    const [profileUser, setProfileUser] = useState({})\n    const [posts, setPosts] = useState([])\n    \n    console.log(props, \"PROPS\")\n    \n    useEffect(() => {\n        if(thisProfileUser){\n            const getUserData = async () => {\n                const data = await GetUserDetailByUsername(thisProfileUser)\n                setProfileUser(data)\n            }\n            getUserData()\n        }\n    }, [thisProfileUser, props.user])\n\n    useEffect(() => {\n        const getPostsByProfileUser = async () => {\n          if (profileUser.id) {  \n            const posts = await GetPostByUserId(profileUser.id) // FIX THIS\n            console.log(\"GETPOSTS BY PROF USER\", profileUser, posts)\n            setPosts(posts)\n            }\n        }\n        getPostsByProfileUser()\n    }, [profileUser])\n    \n\n    const goToUpdate = () => {\n        navigate('update')\n    }\n\n\nconsole.log(\"THIS PROFILE USER\", thisProfileUser)\n\n  if (profileUser.id && props.authenticated) {\n    return(\n        <div className='user-profile'>\n            <div className='profile-wrapper'>\n                <div className='profile-banner'>\n                    <div className='profile-info'>\n                    <h1> {profileUser.username} </h1>\n\n\n                    {/* {(props.user.username === thisProfileUser) ?\n                    <p>OKAY</p> : <p>NOT OKAY</p>} */}\n\n\n                    {props.user.username === thisProfileUser ? <button onClick={() => goToUpdate()}>\n                        \n                        Edit your profile</button> : \"no edit\"}\n                    <div className='profile-img-container'> \n                        <img src={profileUser.profileImg} alt='thumbnail' />\n                    </div>\n                    <h4>Name: {profileUser.fullname}</h4>\n                    <h4>Email: {profileUser.email}</h4>\n                    <p>{profileUser.profileDescription}</p> \n                    </div>\n                    {posts.map((post, i) => (\n                        <div className='post-container' key='i'>\n                            <Post post={post} />\n                        </div> \n                    ))}\n                    \n                </div>\n            </div>\n        </div>\n    )\n  } else {\n      return (\n          <div className='loading'>Loading...</div>\n      )\n  }  \n}\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}