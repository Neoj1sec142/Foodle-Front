{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { LoadOnePostDetail, UploadComment, UpdateComment, ToggleMoreComment } from '../store/actions/PostDetailActions';\nimport { LoadPosts } from '../store/actions/PostActions';\nimport { useEffect } from 'react'; //import Post from '../components/Post'\n\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    postState\n  } = _ref;\n  return {\n    postState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOnePostDetail: id => dispatch(LoadOnePostDetail(id)),\n    updatePostState: id => dispatch(LoadPosts(id)),\n    uploadComment: (id, newComment) => dispatch(UploadComment(id, newComment)),\n    updateComment: comment => dispatch(UpdateComment(comment)),\n    toggleMoreComment: value => dispatch(ToggleMoreComment(value))\n  };\n};\n\nconst PostDetail = props => {\n  _s();\n\n  console.log(props, \"PROPS\");\n  const {\n    post_id\n  } = useParams();\n  useEffect(() => {\n    const GetPost = async () => {\n      //console.log(\"HELLO\")\n      await props.fetchOnePostDetail(post_id);\n      props.updatePostState(post_id);\n    };\n\n    GetPost();\n  }, [post_id]); //console.log(props.postDetailState, \"POST DETAIL STATE\")\n\n  console.log(props.postState.detail, \"POST STATE\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.postState.post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.postState.post.recipeUrl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"1NUDwE/ES92zu7epDkKueHohu08=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js"],"names":["connect","LoadOnePostDetail","UploadComment","UpdateComment","ToggleMoreComment","LoadPosts","useEffect","useParams","mapStateToProps","postState","mapDispatchToProps","dispatch","fetchOnePostDetail","id","updatePostState","uploadComment","newComment","updateComment","comment","toggleMoreComment","value","PostDetail","props","console","log","post_id","GetPost","detail","post","title","recipeUrl"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SACIC,iBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,iBAJJ,QAKS,oCALT;AAMA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAGA,MAAMC,eAAe,GAAG,QAAoB;AAAA,MAAnB;AAAGC,IAAAA;AAAH,GAAmB;AACxC,SAAO;AAAGA,IAAAA;AAAH,GAAP;AACH,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,kBAAkB,EAAGC,EAAD,IAAQF,QAAQ,CAACV,iBAAiB,CAACY,EAAD,CAAlB,CADjC;AAEHC,IAAAA,eAAe,EAAGD,EAAD,IAAQF,QAAQ,CAACN,SAAS,CAACQ,EAAD,CAAV,CAF9B;AAGHE,IAAAA,aAAa,EAAE,CAACF,EAAD,EAAKG,UAAL,KAAoBL,QAAQ,CAACT,aAAa,CAACW,EAAD,EAAKG,UAAL,CAAd,CAHxC;AAIHC,IAAAA,aAAa,EAAGC,OAAD,IAAaP,QAAQ,CAACR,aAAa,CAACe,OAAD,CAAd,CAJjC;AAKHC,IAAAA,iBAAiB,EAAGC,KAAD,IAAWT,QAAQ,CAACP,iBAAiB,CAACgB,KAAD,CAAlB;AALnC,GAAP;AAOH,CARD;;AAUA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AAEA,QAAM;AAACG,IAAAA;AAAD,MAAYlB,SAAS,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,OAAO,GAAG,YAAY;AACxB;AACA,YAAMJ,KAAK,CAACV,kBAAN,CAAyBa,OAAzB,CAAN;AACAH,MAAAA,KAAK,CAACR,eAAN,CAAsBW,OAAtB;AACH,KAJD;;AAKAC,IAAAA,OAAO;AACV,GAPQ,EAON,CAACD,OAAD,CAPM,CAAT,CAN0B,CAe1B;;AAGAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACb,SAAN,CAAgBkB,MAA5B,EAAoC,YAApC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BAII;AAAA,sBAAML,KAAK,CAACb,SAAN,CAAgBmB,IAAhB,CAAqBC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,sBAAMP,KAAK,CAACb,SAAN,CAAgBmB,IAAhB,CAAqBE,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7BD;;GAAMT,U;UAIgBd,S;;;KAJhBc,U;AA+BN,eAAerB,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CW,UAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport {\n    LoadOnePostDetail,\n    UploadComment,\n    UpdateComment,\n    ToggleMoreComment\n  } from '../store/actions/PostDetailActions'\nimport {LoadPosts} from '../store/actions/PostActions' \nimport { useEffect } from 'react'\n//import Post from '../components/Post'\nimport { useParams } from 'react-router-dom'\n\n\nconst mapStateToProps = ({  postState }) => {\n    return {  postState }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchOnePostDetail: (id) => dispatch(LoadOnePostDetail(id)),\n        updatePostState: (id) => dispatch(LoadPosts(id)),\n        uploadComment: (id, newComment) => dispatch(UploadComment(id, newComment)),\n        updateComment: (comment) => dispatch(UpdateComment(comment)),\n        toggleMoreComment: (value) => dispatch(ToggleMoreComment(value))\n    }\n}\n\nconst PostDetail = (props) => {\n\n    console.log(props, \"PROPS\")\n\n    const {post_id} = useParams()\n    \n    useEffect(() => {\n        const GetPost = async () => {\n            //console.log(\"HELLO\")\n            await props.fetchOnePostDetail(post_id)\n            props.updatePostState(post_id)\n        }\n        GetPost()\n    }, [post_id])\n    \n    //console.log(props.postDetailState, \"POST DETAIL STATE\")\n\n\n    console.log(props.postState.detail, \"POST STATE\")\n\n    return(\n        <div className='post-detail' >\n            {/* {props.postState.posts.map((post) => (\n                <Post post={post} />\n            ))} */}\n            <h3> {props.postState.post.title}</h3>\n            <h3> {props.postState.post.recipeUrl}</h3>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail)"]},"metadata":{},"sourceType":"module"}