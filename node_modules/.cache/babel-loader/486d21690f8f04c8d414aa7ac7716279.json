{"ast":null,"code":"import Client from './api';\nexport const GetPosts = async () => {\n  try {\n    const response = await Client.get(`posts`); //console.log(response, \"RESPONSE\")\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c = GetPosts;\nexport const GetPostDetail = async id => {\n  try {\n    const response = await Client.get(`posts/${id}`); // console.log(response.data, \"RESPONSE for Detail\")\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c2 = GetPostDetail;\nexport const GetPostByUserId = async id => {\n  try {\n    const response = await Client.get(`posts/user/${id}`); // console.log(response.data, \"RESPONSE for Detail\")\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c3 = GetPostByUserId;\nexport const AddPost = async (id, post) => {\n  console.log(post, id, \"BEFORE TRY\");\n\n  try {\n    const data = {\n      image: post.image,\n      recipeUrl: post.recipeUrl,\n      description: post.description,\n      rating: post.rating,\n      userId: id\n    };\n    await Client.post(`/posts/create/${id}`, data, {\n      mode: \"CORS\"\n    }).then(res => console.log(res, \"successfully posted\")).catch(err => console.log(err));\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}; // export const UpdatePost = async (id) => {}\n// export const DeletePost = async (id) => {}\n\n_c4 = AddPost;\nexport const AddComment = async (id, newComment) => {\n  console.log(newComment, \"POST api call\");\n\n  try {\n    const data = {\n      rating: 5,\n      comment: newComment,\n      postId: newComment.id\n    };\n    console.log(data, \"DATA\");\n    await Client.post(`comment/${id}`, data).then(res => console.log(res, \"Successfully add a comment\")).catch(error => console.log(error));\n  } catch (error) {\n    throw error;\n  }\n};\n_c5 = AddComment;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetPosts\");\n$RefreshReg$(_c2, \"GetPostDetail\");\n$RefreshReg$(_c3, \"GetPostByUserId\");\n$RefreshReg$(_c4, \"AddPost\");\n$RefreshReg$(_c5, \"AddComment\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/services/PostServices.js"],"names":["Client","GetPosts","response","get","data","error","GetPostDetail","id","GetPostByUserId","AddPost","post","console","log","image","recipeUrl","description","rating","userId","mode","then","res","catch","err","AddComment","newComment","comment","postId"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,OAAnB;AAGA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,GAAP,CAAY,OAAZ,CAAvB,CADA,CAEA;;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CARM;KAAMJ,Q;AAUb,OAAO,MAAMK,aAAa,GAAG,MAAOC,EAAP,IAAc;AACzC,MAAI;AACA,UAAML,QAAQ,GAAG,MAAMF,MAAM,CAACG,GAAP,CAAY,SAAQI,EAAG,EAAvB,CAAvB,CADA,CAEA;;AACA,WAAOL,QAAQ,CAACE,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CARM;MAAMC,a;AASb,OAAO,MAAME,eAAe,GAAG,MAAOD,EAAP,IAAc;AACzC,MAAI;AACA,UAAML,QAAQ,GAAG,MAAMF,MAAM,CAACG,GAAP,CAAY,cAAaI,EAAG,EAA5B,CAAvB,CADA,CAEA;;AACA,WAAOL,QAAQ,CAACE,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CARI;MAAMG,e;AAUb,OAAO,MAAMC,OAAO,GAAG,OAAOF,EAAP,EAAWG,IAAX,KAAoB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBH,EAAlB,EAAsB,YAAtB;;AACA,MAAI;AACA,UAAMH,IAAI,GAAG;AACTS,MAAAA,KAAK,EAAEH,IAAI,CAACG,KADH;AAETC,MAAAA,SAAS,EAAEJ,IAAI,CAACI,SAFP;AAGTC,MAAAA,WAAW,EAAEL,IAAI,CAACK,WAHT;AAITC,MAAAA,MAAM,EAAEN,IAAI,CAACM,MAJJ;AAKTC,MAAAA,MAAM,EAAEV;AALC,KAAb;AAQA,UAAMP,MAAM,CAACU,IAAP,CAAa,iBAAgBH,EAAG,EAAhC,EAAmCH,IAAnC,EAAyC;AAACc,MAAAA,IAAI,EAAE;AAAP,KAAzC,EACLC,IADK,CACCC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,EAAiB,qBAAjB,CADT,EAELC,KAFK,CAEEC,GAAD,IAASX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAFV,CAAN;AAGA,WAAOlB,IAAP;AACH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAlBM,C,CAmBP;AACA;;MApBaI,O;AAsBb,OAAO,MAAMc,UAAU,GAAG,OAAOhB,EAAP,EAAWiB,UAAX,KAA0B;AAClDb,EAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ,EAAwB,eAAxB;;AACA,MAAI;AACA,UAAMpB,IAAI,GAAG;AACTY,MAAAA,MAAM,EAAE,CADC;AAETS,MAAAA,OAAO,EAAED,UAFA;AAGTE,MAAAA,MAAM,EAAEF,UAAU,CAACjB;AAHV,KAAb;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkB,MAAlB;AAEA,UAAMJ,MAAM,CAACU,IAAP,CAAa,WAAUH,EAAG,EAA1B,EAA6BH,IAA7B,EACLe,IADK,CACCC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,EAAiB,4BAAjB,CADT,EAELC,KAFK,CAEEhB,KAAD,IAAWM,OAAO,CAACC,GAAR,CAAYP,KAAZ,CAFZ,CAAN;AAGH,GAXD,CAWE,OAAOA,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CAhBM;MAAMkB,U","sourcesContent":["import Client from './api'\n\n\nexport const GetPosts = async () => {\n  try {\n      const response = await Client.get(`posts`)\n      //console.log(response, \"RESPONSE\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const GetPostDetail = async (id) => {\n  try {\n      const response = await Client.get(`posts/${id}`)\n      // console.log(response.data, \"RESPONSE for Detail\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\nexport const GetPostByUserId = async (id) => {\n    try {\n        const response = await Client.get(`posts/user/${id}`)\n        // console.log(response.data, \"RESPONSE for Detail\")\n        return response.data\n    } catch (error) {\n        throw error\n    }\n  }\n\nexport const AddPost = async (id, post) => {\n    console.log(post, id, \"BEFORE TRY\")\n    try {\n        const data = {\n            image: post.image,\n            recipeUrl: post.recipeUrl,\n            description: post.description,\n            rating: post.rating,\n            userId: id\n        }\n        \n        await Client.post(`/posts/create/${id}`, data, {mode: \"CORS\"})\n        .then((res) => console.log(res, \"successfully posted\"))\n        .catch((err) => console.log(err))\n        return data\n    } catch (error) {\n        throw error\n    } \n}\n// export const UpdatePost = async (id) => {}\n// export const DeletePost = async (id) => {}\n\nexport const AddComment = async (id, newComment) => {\n  console.log(newComment, \"POST api call\");\n  try {\n      const data = {\n          rating: 5,\n          comment: newComment,\n          postId: newComment.id\n      }\n      console.log(data, \"DATA\");\n      \n      await Client.post(`comment/${id}`, data)\n      .then((res) => console.log(res, \"Successfully add a comment\"))\n      .catch((error) => console.log(error))\n  } catch (error) {\n      throw error\n  }\n}"]},"metadata":{},"sourceType":"module"}