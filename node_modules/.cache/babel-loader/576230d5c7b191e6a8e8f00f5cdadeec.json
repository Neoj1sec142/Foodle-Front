{"ast":null,"code":"import Axios from 'axios';\nexport const BASE_URL = 'http://localhost:3001';\nconst Client = Axios.get({\n  baseURL: BASE_URL\n});\nexport const GetUsers = async () => {\n  try {\n    const response = await Client.get(`users`);\n    console.log(response, \"RESPONSE\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c = GetUsers;\nexport const GetUserDetail = async id => {\n  try {\n    const response = await Client.get(`users/${id}`);\n    console.log(response, \"RESPONSE for User\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c2 = GetUserDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetUsers\");\n$RefreshReg$(_c2, \"GetUserDetail\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/services/UserServices.js"],"names":["Axios","BASE_URL","Client","get","baseURL","GetUsers","response","console","log","data","error","GetUserDetail","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,uBAAjB;AAEP,MAAMC,MAAM,GAAGF,KAAK,CAACG,GAAN,CAAU;AAAEC,EAAAA,OAAO,EAAEH;AAAX,CAAV,CAAf;AAEA,OAAO,MAAMI,QAAQ,GAAG,YAAY;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACC,GAAP,CAAY,OAAZ,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,UAAtB;AACA,WAAOA,QAAQ,CAACG,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CARM;KAAML,Q;AAUb,OAAO,MAAMM,aAAa,GAAG,MAAOC,EAAP,IAAc;AACzC,MAAI;AACA,UAAMN,QAAQ,GAAG,MAAMJ,MAAM,CAACC,GAAP,CAAY,SAAQS,EAAG,EAAvB,CAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,mBAAtB;AACA,WAAOA,QAAQ,CAACG,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACF,CARM;MAAMC,a","sourcesContent":["import Axios from 'axios'\n\nexport const BASE_URL = 'http://localhost:3001'\n\nconst Client = Axios.get({ baseURL: BASE_URL })\n\nexport const GetUsers = async () => {\n  try {\n      const response = await Client.get(`users`)\n      console.log(response, \"RESPONSE\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const GetUserDetail = async (id) => {\n  try {\n      const response = await Client.get(`users/${id}`)\n      console.log(response, \"RESPONSE for User\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}"]},"metadata":{},"sourceType":"module"}