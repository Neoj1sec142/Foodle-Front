{"ast":null,"code":"const {\n  GET_POSTS,\n  NEW_POST,\n  UPDATE_POST,\n  GET_POST_DETAIL\n} = require('../types');\n\nconst initialState = {\n  posts: [],\n  detail: {},\n  post: {// image: '',\n    // description: '',\n    // recipeUrl: '',\n    // rating: 0\n  }\n};\n\nconst PostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case NEW_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case UPDATE_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case GET_POST_DETAIL:\n      return { ...state,\n        detail: action.payload,\n        comments: action.payload.comments\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = PostReducer;\nexport default PostReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostReducer\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/store/reducers/PostReducer.js"],"names":["GET_POSTS","NEW_POST","UPDATE_POST","GET_POST_DETAIL","require","initialState","posts","detail","post","PostReducer","state","action","type","payload","comments"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA;AAApC,IAAwDC,OAAO,CAAC,UAAD,CAArE;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,IAAI,EAAE,CACF;AACA;AACA;AACA;AAJE;AAHW,CAArB;;AAWA,MAAMC,WAAW,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,SAAL;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAKZ,QAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAWF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAxB,OAAP;;AACJ,SAAKX,WAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAxB,OAAP;;AACJ,SAAKV,eAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWH,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAA1B;AAAmCC,QAAAA,QAAQ,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAA5D,OAAP;;AACJ;AACI,aAAO,EAAC,GAAGJ;AAAJ,OAAP;AAVR;AAYH,CAbD;;KAAMD,W;AAeN,eAAeA,WAAf","sourcesContent":["const { GET_POSTS, NEW_POST, UPDATE_POST, GET_POST_DETAIL } = require('../types')\n\nconst initialState = {\n    posts: [],\n    detail: {},\n    post: {\n        // image: '',\n        // description: '',\n        // recipeUrl: '',\n        // rating: 0\n    }\n}\n\nconst PostReducer = (state =initialState, action) => {\n    switch (action.type) {\n        case GET_POSTS:\n            return {...state, posts: action.payload}\n        case NEW_POST:\n            return {...state, post: action.payload}\n        case UPDATE_POST:\n            return {...state, post: action.payload}\n        case GET_POST_DETAIL:\n            return {...state, detail: action.payload, comments: action.payload.comments }\n        default:\n            return {...state}\n    }\n}\n\nexport default PostReducer"]},"metadata":{},"sourceType":"module"}