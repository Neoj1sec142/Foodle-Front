{"ast":null,"code":"import * as services from '../../services/PostServices';\nimport * as types from '../types';\nexport const LoadPostDetail = id => {\n  return async dispatch => {\n    try {\n      const postDetail = await services.GetPosts(id);\n      dispatch({\n        type: types.GET_POST_DETAIL,\n        payload: postDetail\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n}; //Load post from server to state\n\n_c = LoadPostDetail;\nexport const LoadPosts = () => {\n  return async dispatch => {\n    try {\n      console.log(\"Before GET\");\n      const posts = await services.GetPosts();\n      console.log(posts, \"After GET\");\n      dispatch({\n        type: types.GET_POSTS,\n        payload: posts\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n}; //Add a post to database\n\n_c2 = LoadPosts;\nexport const UploadPost = (id, post) => {\n  return async dispatch => {\n    try {\n      await services.AddPost(id, post);\n      dispatch({\n        type: types.NEW_POST,\n        payload: post\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n_c3 = UploadPost;\nexport const UpdatePost = post => ({\n  type: types.UPDATE_POST,\n  payload: post\n});\n_c4 = UpdatePost;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoadPostDetail\");\n$RefreshReg$(_c2, \"LoadPosts\");\n$RefreshReg$(_c3, \"UploadPost\");\n$RefreshReg$(_c4, \"UpdatePost\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/store/actions/PostActions.js"],"names":["services","types","LoadPostDetail","id","dispatch","postDetail","GetPosts","type","GET_POST_DETAIL","payload","error","LoadPosts","console","log","posts","GET_POSTS","UploadPost","post","AddPost","NEW_POST","UpdatePost","UPDATE_POST"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,6BAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,UAAU,GAAG,MAAML,QAAQ,CAACM,QAAT,CAAkBH,EAAlB,CAAzB;AACAC,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEN,KAAK,CAACO,eADP;AAELC,QAAAA,OAAO,EAAEJ;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAOK,KAAP,EAAc;AACZ,YAAMA,KAAN;AACH;AACJ,GAVD;AAWH,CAZM,C,CAaP;;KAbaR,c;AAcb,OAAO,MAAMS,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAOP,QAAP,IAAoB;AACvB,QAAI;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,YAAMC,KAAK,GAAG,MAAMd,QAAQ,CAACM,QAAT,EAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAAmB,WAAnB;AACAV,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEN,KAAK,CAACc,SADP;AAELN,QAAAA,OAAO,EAAEK;AAFJ,OAAD,CAAR;AAIH,KATD,CASE,OAAOJ,KAAP,EAAc;AACZ,YAAMA,KAAN;AACH;AACJ,GAbD;AAcH,CAfM,C,CAgBP;;MAhBaC,S;AAiBb,OAAO,MAAMK,UAAU,GAAG,CAACb,EAAD,EAAKc,IAAL,KAAc;AACpC,SAAO,MAAOb,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMJ,QAAQ,CAACkB,OAAT,CAAiBf,EAAjB,EAAqBc,IAArB,CAAN;AACAb,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEN,KAAK,CAACkB,QADP;AAELV,QAAAA,OAAO,EAAEQ;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAOP,KAAP,EAAc;AACZ,YAAMA,KAAN;AACH;AACJ,GAVD;AAWH,CAZM;MAAMM,U;AAab,OAAO,MAAMI,UAAU,GAAIH,IAAD,KAAW;AACjCV,EAAAA,IAAI,EAAEN,KAAK,CAACoB,WADqB;AAEjCZ,EAAAA,OAAO,EAAEQ;AAFwB,CAAX,CAAnB;MAAMG,U","sourcesContent":["import * as services from '../../services/PostServices'\nimport * as types from '../types'\n\nexport const LoadPostDetail = (id) => {\n    return async (dispatch) => {\n        try {\n            const postDetail = await services.GetPosts(id)\n            dispatch({\n                type: types.GET_POST_DETAIL,\n                payload: postDetail\n            })            \n        } catch (error) {\n            throw error\n        }\n    }\n}\n//Load post from server to state\nexport const LoadPosts = () => {\n    return async (dispatch) => {\n        try {\n            console.log(\"Before GET\");\n            \n            const posts = await services.GetPosts()\n            console.log(posts, \"After GET\");\n            dispatch({\n                type: types.GET_POSTS,\n                payload: posts\n            })            \n        } catch (error) {\n            throw error\n        }\n    }\n}\n//Add a post to database\nexport const UploadPost = (id, post) => {\n    return async (dispatch) => {\n        try {\n            await services.AddPost(id, post)\n            dispatch({\n                type: types.NEW_POST,\n                payload: post\n            }) \n        } catch (error) {\n            throw error\n        }\n    }\n}\nexport const UpdatePost = (post) => ({\n    type: types.UPDATE_POST,\n    payload: post\n})\n\n\n"]},"metadata":{},"sourceType":"module"}