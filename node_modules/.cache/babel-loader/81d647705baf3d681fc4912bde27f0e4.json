{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react'; // import { LoadUserDetails } from '../store/actions/UserActions'\n\nimport { GetUserDetail } from '../services/UserServices';\nimport { GetPostByUserId } from '../services/PostServices';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  console.log(props, \"PROPS\");\n  useEffect(() => {\n    // e.prevent.default()\n    if (props.user) {\n      const getUserData = async () => {\n        const data = await GetUserDetail(props.user.id);\n        setUser(data);\n      };\n\n      getUserData();\n    }\n  }, [props.user]);\n  useEffect(() => {\n    const getPostData = async () => {\n      const posts = await GetPostByUserId(props.user.id); //console.log(posts)\n\n      setPosts(posts);\n    };\n\n    getPostData();\n  }, [props.user]);\n  console.log(posts, \"BEFORE RETURN\");\n\n  if (user.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Profile Page \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: user.fullname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), posts.map((post, i) => /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this) // <div className='post-container' key='i'>\n          //     <img src={post.image} className='post-image' />\n          //     <h5><a href={post.recipeUrl} target='_blank'>The Recipe (link)</a></h5>\n          //     <p>{post.description}</p>\n          // </div> \n          )]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(Profile, \"CRwpTuwjylrnWf44XDX0ER+vFGc=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js"],"names":["useParams","React","useState","useEffect","GetUserDetail","GetPostByUserId","Post","Profile","props","user","setUser","posts","setPosts","console","log","getUserData","data","id","getPostData","fullname","email","username","map","post","i"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmB,OAAnB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGK,KAAK,CAACC,IAAT,EAAc;AACV,YAAMM,WAAW,GAAG,YAAY;AAC5B,cAAMC,IAAI,GAAG,MAAMZ,aAAa,CAACI,KAAK,CAACC,IAAN,CAAWQ,EAAZ,CAAhC;AAEAP,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OAJD;;AAKAD,MAAAA,WAAW;AACd;AACJ,GAVQ,EAUN,CAACP,KAAK,CAACC,IAAP,CAVM,CAAT;AAYAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,WAAW,GAAG,YAAY;AAC5B,YAAMP,KAAK,GAAG,MAAMN,eAAe,CAACG,KAAK,CAACC,IAAN,CAAWQ,EAAZ,CAAnC,CAD4B,CAE5B;;AACAL,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAJD;;AAKAO,IAAAA,WAAW;AACd,GAPQ,EAON,CAACV,KAAK,CAACC,IAAP,CAPM,CAAT;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,eAAnB;;AAEF,MAAIF,IAAI,CAACQ,EAAT,EAAa;AACX,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKR,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKV,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,wBAAKX,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAOKV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADO,CAGP;AACA;AACA;AACA;AACA;AAPH,WAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBD,GAxBD,MAwBO;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACF,CA3DD;;GAAMhB,O;;KAAAA,O;AA4DN,eAAeA,OAAf","sourcesContent":["\nimport { useParams } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\n// import { LoadUserDetails } from '../store/actions/UserActions'\nimport { GetUserDetail } from '../services/UserServices'\nimport { GetPostByUserId } from '../services/PostServices'\nimport Post from '../components/Post'\n\n\nconst Profile = (props) => {\n     \n    const [user, setUser] = useState({})\n    const [posts, setPosts] = useState([])\n    \n    console.log(props, \"PROPS\")\n    \n    useEffect(() => {\n        // e.prevent.default()\n        if(props.user){\n            const getUserData = async () => {\n                const data = await GetUserDetail(props.user.id)\n                \n                setUser(data)\n            }\n            getUserData()\n        }\n    }, [props.user])\n\n    useEffect(() => {\n        const getPostData = async () => {\n            const posts = await GetPostByUserId(props.user.id)\n            //console.log(posts)\n            setPosts(posts)\n        }\n        getPostData()\n    }, [props.user])\n    \n    console.log(posts, \"BEFORE RETURN\")\n\n  if (user.id) {\n    return(\n        <div className='user-profile'>\n            <div className='profile-wrapper'>\n                <div className='profile-banner'>\n                    <div className='profile-info'>\n                    <h1> Profile Page </h1>\n                    <h2>{user.fullname}</h2>\n                    <h3>{user.email}</h3>\n                    <h3>{user.username}</h3> \n                    </div>\n                    {posts.map((post, i) => (\n                        <Post post={post} />\n                        \n                        // <div className='post-container' key='i'>\n                        //     <img src={post.image} className='post-image' />\n                        //     <h5><a href={post.recipeUrl} target='_blank'>The Recipe (link)</a></h5>\n                        //     <p>{post.description}</p>\n                        // </div> \n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n  } else {\n      return (\n          <div className='loading'>Loading...</div>\n      )\n  }  \n}\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}