{"ast":null,"code":"import Client from './api';\nexport const GetPosts = async () => {\n  try {\n    const response = await Client.get(`posts`); //console.log(response, \"RESPONSE\")\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c = GetPosts;\nexport const GetPostDetail = async id => {\n  try {\n    const response = await Client.get(`posts/${id}`);\n    console.log(response.data, \"RESPONSE for Detail\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c2 = GetPostDetail;\nexport const GetPostByUserId = async id => {\n  try {\n    const response = await Client.get(`posts/user/${id}`); // console.log(response.data, \"RESPONSE for Detail\")\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c3 = GetPostByUserId;\nexport const AddPost = async (id, post) => {\n  console.log(post, id, \"BEFORE TRY\");\n\n  try {\n    const data = {\n      title: post.title,\n      image: post.image,\n      recipeUrl: post.recipeUrl,\n      description: post.description,\n      rating: post.rating,\n      userId: id\n    };\n    await Client.post(`/posts/create/${id}`, data, {\n      mode: \"CORS\"\n    }).then(res => console.log(res, \"successfully posted\")).catch(err => console.log(err));\n  } catch (error) {\n    throw error;\n  }\n}; // export const UpdatePost = async (id) => {}\n\n_c4 = AddPost;\nexport const DeletePost = async id => {\n  // console.log(id)\n  try {\n    await Client.delete(`posts/delete/${id}`).then(res => console.log(res, \"Successfully deleted post\")).catch(error => console.log(error));\n  } catch (err) {\n    throw err;\n  }\n};\n_c5 = DeletePost;\nexport const AddComment = async (id, newComment) => {\n  console.log(newComment, \"POST api call\");\n\n  try {\n    const data = {\n      rating: newComment.rating,\n      comment: newComment.comment\n    };\n    console.log(data, \"DATA\");\n    await Client.post(`comment/${id}`, data).then(res => console.log(res, \"Successfully add a comment\")).catch(error => console.log(error));\n  } catch (error) {\n    throw error;\n  }\n};\n_c6 = AddComment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GetPosts\");\n$RefreshReg$(_c2, \"GetPostDetail\");\n$RefreshReg$(_c3, \"GetPostByUserId\");\n$RefreshReg$(_c4, \"AddPost\");\n$RefreshReg$(_c5, \"DeletePost\");\n$RefreshReg$(_c6, \"AddComment\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/services/PostServices.js"],"names":["Client","GetPosts","response","get","data","error","GetPostDetail","id","console","log","GetPostByUserId","AddPost","post","title","image","recipeUrl","description","rating","userId","mode","then","res","catch","err","DeletePost","delete","AddComment","newComment","comment"],"mappings":"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","sourcesContent":["import Client from './api'\n\n\nexport const GetPosts = async () => {\n  try {\n      const response = await Client.get(`posts`)\n      //console.log(response, \"RESPONSE\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const GetPostDetail = async (id) => {\n  try {\n      const response = await Client.get(`posts/${id}`)\n      console.log(response.data, \"RESPONSE for Detail\")\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\nexport const GetPostByUserId = async (id) => {\n    try {\n        const response = await Client.get(`posts/user/${id}`)\n        // console.log(response.data, \"RESPONSE for Detail\")\n        return response.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const AddPost = async (id, post) => {\n    console.log(post, id, \"BEFORE TRY\")\n    try {\n        const data = {\n            title: post.title,\n            image: post.image,\n            recipeUrl: post.recipeUrl,\n            description: post.description,\n            rating: post.rating,\n            userId: id\n        }\n        await Client.post(`/posts/create/${id}`, data, {mode: \"CORS\"})\n        .then((res) => console.log(res, \"successfully posted\"))\n        .catch((err) => console.log(err))\n    } catch (error) {\n        throw error\n    } \n}\n// export const UpdatePost = async (id) => {}\nexport const DeletePost = async (id) => {\n    // console.log(id)\n    try{\n        await Client.delete(`posts/delete/${id}`)\n        .then((res) => console.log(res, \"Successfully deleted post\"))\n        .catch((error) => console.log(error))\n    } catch (err) {\n        throw err\n    }\n}\n\nexport const AddComment = async (id, newComment) => {\n  console.log(newComment, \"POST api call\");\n  try {\n      const data = {\n          rating: newComment.rating,\n          comment: newComment.comment\n      }\n      console.log(data, \"DATA\");\n      \n      await Client.post(`comment/${id}`, data)\n      .then((res) => console.log(res, \"Successfully add a comment\"))\n      .catch((error) => console.log(error))\n  } catch (error) {\n      throw error\n  }\n}"]},"metadata":{},"sourceType":"module"}