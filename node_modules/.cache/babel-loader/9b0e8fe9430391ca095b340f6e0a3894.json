{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { LoadOnePostDetail, LoadPostDetail, UploadComment, UpdateComment, ToggleMoreComment } from '../store/actions/PostDetailActions';\nimport { LoadPosts } from '../store/actions/PostActions';\nimport { useEffect } from 'react'; //import Post from '../components/Post'\n\nimport { useParams } from 'react-router-dom';\nimport ReactStars from 'react-stars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    postDetailState\n  } = _ref;\n  return {\n    postDetailState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOnePostDetail: id => dispatch(LoadOnePostDetail(id)),\n    updatePostState: id => dispatch(LoadPosts(id)),\n    uploadComment: (user_id, post_id, newComment) => dispatch(UploadComment(user_id, post_id, newComment)),\n    updateComment: comment => dispatch(UpdateComment(comment)),\n    toggleMoreComment: value => dispatch(ToggleMoreComment(value))\n  };\n};\n\nconst PostDetail = props => {\n  _s();\n\n  const {\n    post_id\n  } = useParams(); //for postState\n\n  useEffect(() => {\n    const GetPost = async () => {\n      await props.fetchOnePostDetail(post_id); // props.updatePostState(post_id)\n    };\n\n    GetPost();\n  }, [post_id]); //for postDetailState\n  // useEffect(() => {\n  //     const GetPostDetail = async () => {\n  //         await props.fetchPostDetail(post_id)\n  //     }\n  //     GetPostDetail()\n  // }, [post_id])\n\n  const user_id = props.user.id;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.uploadComment(user_id, post_id, props.postDetailState.newComment);\n    props.toggleMoreComment(!props.postDetailState.moreComment);\n  };\n\n  const handleChange = async e => {\n    await props.updateComment(e.target.value);\n  };\n\n  console.log(props.user, \"user\");\n  const post = props.postDetailState.postDetail; // console.log(post, \"POST\")\n\n  if (post.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Title: \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Url: \", post.recipeUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Rating: \", post.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Posted by User: \", post.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), props.postDetailState.moreComment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n          onChange: '',\n          size: 24,\n          color2: '#ffd700',\n          className: 'stars',\n          half: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: props.postDetailState.newComment,\n          placeholder: \"Add your thoughts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: props.postDetailState.moreComment ? 'Send' : 'Add a Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(PostDetail, \"1NUDwE/ES92zu7epDkKueHohu08=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js"],"names":["connect","LoadOnePostDetail","LoadPostDetail","UploadComment","UpdateComment","ToggleMoreComment","LoadPosts","useEffect","useParams","ReactStars","mapStateToProps","postDetailState","mapDispatchToProps","dispatch","fetchOnePostDetail","id","updatePostState","uploadComment","user_id","post_id","newComment","updateComment","comment","toggleMoreComment","value","PostDetail","props","GetPost","user","handleSubmit","e","preventDefault","moreComment","handleChange","target","console","log","post","postDetail","image","width","title","recipeUrl","rating","description","userId"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport {\n    LoadOnePostDetail,\n    LoadPostDetail,\n    UploadComment,\n    UpdateComment,\n    ToggleMoreComment\n  } from '../store/actions/PostDetailActions'\nimport {LoadPosts} from '../store/actions/PostActions' \nimport { useEffect } from 'react'\n//import Post from '../components/Post'\nimport { useParams } from 'react-router-dom'\nimport ReactStars from 'react-stars'\n\n\nconst mapStateToProps = ({  postDetailState }) => {\n    return {   postDetailState }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchOnePostDetail: (id) => dispatch(LoadOnePostDetail(id)),\n        updatePostState: (id) => dispatch(LoadPosts(id)),\n        uploadComment: (user_id, post_id, newComment) => dispatch(UploadComment(user_id, post_id, newComment)),\n        updateComment: (comment) => dispatch(UpdateComment(comment)),\n        toggleMoreComment: (value) => dispatch(ToggleMoreComment(value))\n    }\n}\n\nconst PostDetail = (props) => {\n\n    const {post_id} = useParams()\n    //for postState\n    useEffect(() => {\n        const GetPost = async () => {\n            await props.fetchOnePostDetail(post_id)\n            // props.updatePostState(post_id)\n        }\n        GetPost()\n    }, [post_id])\n\n    //for postDetailState\n    // useEffect(() => {\n    //     const GetPostDetail = async () => {\n    //         await props.fetchPostDetail(post_id)\n    //     }\n    //     GetPostDetail()\n    // }, [post_id])\n    const user_id = props.user.id\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.uploadComment(user_id, post_id, props.postDetailState.newComment)\n        props.toggleMoreComment(!props.postDetailState.moreComment)\n    }\n    \n    const handleChange = async (e) => {\n        await props.updateComment(e.target.value)\n    }\n    \n    console.log(props.user, \"user\")\n    const post = props.postDetailState.postDetail\n    // console.log(post, \"POST\")\n    if (post.id){\n    return(\n        <div className='post-detail' >\n            {/* {props.postState.posts.map((post) => (\n                <Post post={post} />\n            ))} */}\n             {/* \n                {props.postDetailState.comments.map((comm) => (\n                <Comment rating={comm.rating} comment={comm.comment} key={comm._id} />\n                ))} */}\n            <img src={post.image} style={{width: '300px'}}/>\n            <h3>Title: {post.title}</h3>\n            <h3>Url: {post.recipeUrl}</h3>\n            <h3>Rating: {post.rating}</h3>\n            <p>Description: {post.description}</p>\n            <h5>Posted by User: {post.userId}</h5>\n            {props.postDetailState.moreComment && (\n                <div>\n                    <ReactStars\n                        onChange={''}\n                        size={24}\n                        color2={'#ffd700'}\n                        className={'stars'}\n                        half={false}\n                    />\n                    <textarea \n                        onChange={handleChange}\n                        value={props.postDetailState.newComment}\n                        placeholder=\"Add your thoughts...\"\n                    />\n                </div>\n            )}\n            <button onClick={handleSubmit}>\n                {props.postDetailState.moreComment ? 'Send' : 'Add a Comment'}\n            </button>\n        </div>\n        )\n    }else {\n        return (\n            <div>Loading......</div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail)"]},"metadata":{},"sourceType":"module"}