{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { LoadOnePostDetail, LoadPostDetail, UploadComment, UpdateComment, ToggleMoreComment } from '../store/actions/PostDetailActions';\nimport { LoadPosts } from '../store/actions/PostActions';\nimport { useEffect } from 'react';\nimport Comment from '../components/Comment';\nimport { useParams } from 'react-router-dom';\nimport ReactStars from 'react-stars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    postState,\n    postDetailState\n  } = _ref;\n  return {\n    postState,\n    postDetailState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPostDetail: id => dispatch(LoadPostDetail(id)),\n    fetchOnePostDetail: id => dispatch(LoadOnePostDetail(id)),\n    updatePostState: id => dispatch(LoadPosts(id)),\n    uploadComment: (user_id, post_id, newComment) => dispatch(UploadComment(user_id, post_id, newComment)),\n    updateComment: comment => dispatch(UpdateComment(comment)),\n    toggleMoreComment: value => dispatch(ToggleMoreComment(value))\n  };\n};\n\nconst PostDetail = props => {\n  _s();\n\n  const {\n    post_id\n  } = useParams(); //for postState\n\n  useEffect(() => {\n    const GetPost = async () => {\n      await props.fetchOnePostDetail(post_id);\n      props.updatePostState(post_id);\n    };\n\n    GetPost();\n  }, [post_id]); //for postDetailState\n  // useEffect(() => {\n  //     const GetPostDetail = async () => {\n  //         await props.fetchPostDetail(post_id)\n  //     }\n  //     GetPostDetail()\n  // }, [post_id])\n\n  const handleSubmit = e => {\n    const user_id = props.user.id;\n    console.log(user_id);\n    e.preventDefault();\n    props.uploadComment(user_id, post_id, props.postDetailState.newComment);\n    props.toggleMoreComment(!props.postDetailState.moreComment);\n  };\n\n  const handleChange = async e => {\n    const newComment = props.postDetailState.newComment;\n    await props.updateComment({ ...newComment,\n      [e.target.name]: e.target.value\n    }); //console.log(newComment)\n  }; //console.log(props.user, \"user\")\n\n\n  const post = props.postDetailState.postDetail;\n  console.log(props.postDetailState.postDetail.Comments, \"POST DETAIL STATE\");\n\n  if (post.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Title: \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Url: \", post.recipeUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Rating: \", post.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Posted by User: \", post.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.postDetailState.postDetail.Comments.map(comm => /*#__PURE__*/_jsxDEV(Comment, {\n          rating: comm.rating,\n          comment: comm.comment\n        }, comm.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), props.postDetailState.moreComment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n          onChange: '',\n          size: 24,\n          color2: '#ffd700',\n          className: 'stars',\n          half: false,\n          name: \"rating\",\n          value: props.postDetailState.newComment.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          name: \"comment\",\n          value: props.postDetailState.newComment.comment,\n          placeholder: \"Add your thoughts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: props.postDetailState.moreComment ? 'Send' : 'Add a Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(PostDetail, \"1NUDwE/ES92zu7epDkKueHohu08=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/PostDetail.js"],"names":["connect","LoadOnePostDetail","LoadPostDetail","UploadComment","UpdateComment","ToggleMoreComment","LoadPosts","useEffect","Comment","useParams","ReactStars","mapStateToProps","postState","postDetailState","mapDispatchToProps","dispatch","fetchPostDetail","id","fetchOnePostDetail","updatePostState","uploadComment","user_id","post_id","newComment","updateComment","comment","toggleMoreComment","value","PostDetail","props","GetPost","handleSubmit","e","user","console","log","preventDefault","moreComment","handleChange","target","name","post","postDetail","Comments","image","width","title","recipeUrl","rating","description","userId","map","comm"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport {\n    LoadOnePostDetail,\n    LoadPostDetail,\n    UploadComment,\n    UpdateComment,\n    ToggleMoreComment\n  } from '../store/actions/PostDetailActions'\nimport {LoadPosts} from '../store/actions/PostActions' \nimport { useEffect } from 'react'\nimport Comment from '../components/Comment'\nimport { useParams } from 'react-router-dom'\nimport ReactStars from 'react-stars'\n\n\nconst mapStateToProps = ({  postState, postDetailState }) => {\n    return {  postState, postDetailState }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchPostDetail: (id) => dispatch(LoadPostDetail(id)),\n        fetchOnePostDetail: (id) => dispatch(LoadOnePostDetail(id)),\n        updatePostState: (id) => dispatch(LoadPosts(id)),\n        uploadComment: (user_id, post_id, newComment) => dispatch(UploadComment(user_id, post_id, newComment)),\n        updateComment: (comment) => dispatch(UpdateComment(comment)),\n        toggleMoreComment: (value) => dispatch(ToggleMoreComment(value))\n    }\n}\n\nconst PostDetail = (props) => {\n\n    const {post_id} = useParams()\n    //for postState\n    useEffect(() => {\n        const GetPost = async () => {\n            await props.fetchOnePostDetail(post_id)\n            props.updatePostState(post_id)\n        }\n        GetPost()\n    }, [post_id])\n\n    //for postDetailState\n    // useEffect(() => {\n    //     const GetPostDetail = async () => {\n    //         await props.fetchPostDetail(post_id)\n    //     }\n    //     GetPostDetail()\n    // }, [post_id])\n    \n    const handleSubmit = (e) => {\n        const user_id = props.user.id\n        console.log(user_id)\n        e.preventDefault()\n        props.uploadComment(user_id, post_id, props.postDetailState.newComment)\n        props.toggleMoreComment(!props.postDetailState.moreComment)\n    }\n    \n    const handleChange = async (e) => {\n        const newComment = props.postDetailState.newComment\n        await props.updateComment({...newComment, [e.target.name]: e.target.value })\n        //console.log(newComment)\n    }\n    \n    //console.log(props.user, \"user\")\n    const post = props.postDetailState.postDetail\n    console.log(props.postDetailState.postDetail.Comments, \"POST DETAIL STATE\")\n    if (post.id){\n    return(\n        <div className='post-detail' >\n            {/* {props.postState.posts.map((post) => (\n                <Post post={post} />\n            ))} */}\n            \n            <img src={post.image} style={{width: '300px'}}/>\n            <h3>Title: {post.title}</h3>\n            <h3>Url: {post.recipeUrl}</h3>\n            <h3>Rating: {post.rating}</h3>\n            <p>Description: {post.description}</p>\n            <h5>Posted by User: {post.userId}</h5> \n            <div>\n                {props.postDetailState.postDetail.Comments.map((comm) => (\n                    <Comment rating={comm.rating} comment={comm.comment} key={comm.id} /> \n                ))} \n            </div>\n            {props.postDetailState.moreComment && (\n                <div>\n                    <ReactStars\n                        onChange={''}\n                        size={24}\n                        color2={'#ffd700'}\n                        className={'stars'}\n                        half={false}\n                        name='rating'\n                        value={props.postDetailState.newComment.rating}\n                    />\n                    <textarea \n                        onChange={handleChange}\n                        name='comment'\n                        value={props.postDetailState.newComment.comment}\n                        placeholder=\"Add your thoughts...\"\n                    />\n                </div>\n            )}\n            <button onClick={handleSubmit}>\n                {props.postDetailState.moreComment ? 'Send' : 'Add a Comment'}\n            </button>\n        </div>\n        )\n    }else {\n        return (\n            <div>Loading......</div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail)"]},"metadata":{},"sourceType":"module"}