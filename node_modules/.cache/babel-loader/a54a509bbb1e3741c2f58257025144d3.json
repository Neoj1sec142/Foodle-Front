{"ast":null,"code":"const {\n  GET_POSTS,\n  NEW_POST,\n  UPDATE_POST\n} = require('../types');\n\nconst initialState = {\n  posts: [],\n  post: {\n    image: '',\n    description: '',\n    recipeUrl: '',\n    rating: 0,\n    userId: ''\n  }\n};\n\nconst PostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case NEW_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case UPDATE_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = PostReducer;\nexport default PostReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostReducer\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/store/reducers/PostReducer.js"],"names":["GET_POSTS","NEW_POST","UPDATE_POST","require","initialState","posts","post","image","description","recipeUrl","rating","userId","PostReducer","state","action","type","payload"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,IAAuCC,OAAO,CAAC,UAAD,CAApD;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,EADL;AAEFC,IAAAA,WAAW,EAAE,EAFX;AAGFC,IAAAA,SAAS,EAAE,EAHT;AAIFC,IAAAA,MAAM,EAAE,CAJN;AAKFC,IAAAA,MAAM,EAAE;AALN;AAFW,CAArB;;AAWA,MAAMC,WAAW,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,SAAL;AACI,aAAO,EAAC,GAAGa,KAAJ;AAAWR,QAAAA,KAAK,EAAES,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAKf,QAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAWP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAxB,OAAP;;AACJ,SAAKd,WAAL;AACI,aAAO,EAAC,GAAGW,KAAJ;AAAWP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAxB,OAAP;;AACJ;AACI,aAAO,EAAC,GAAGH;AAAJ,OAAP;AARR;AAUH,CAXD;;KAAMD,W;AAaN,eAAeA,WAAf","sourcesContent":["const { GET_POSTS, NEW_POST, UPDATE_POST } = require('../types')\n\nconst initialState = {\n    posts: [],\n    post: {\n        image: '',\n        description: '',\n        recipeUrl: '',\n        rating: 0,\n        userId: ''\n    }\n}\n\nconst PostReducer = (state =initialState, action) => {\n    switch (action.type) {\n        case GET_POSTS:\n            return {...state, posts: action.payload}\n        case NEW_POST:\n            return {...state, post: action.payload}\n        case UPDATE_POST:\n            return {...state, post: action.payload}\n        default:\n            return {...state}\n    }\n}\n\nexport default PostReducer"]},"metadata":{},"sourceType":"module"}