{"ast":null,"code":"var _jsxFileName = \"/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react'; // import { LoadUserDetails } from '../store/actions/UserActions'\n\nimport { GetUserDetail } from '../services/UserServices';\nimport { GetPostByUserId } from '../services/PostServices';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const thisProfileUser = useParams.username;\n  const [profileUser, setProfileUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  console.log(props, \"PROPS\");\n  useEffect(() => {\n    // e.prevent.default()\n    if (props.user) {\n      const getUserData = async () => {\n        const data = await GetUserDetail(props.user.id); // FIX THIS\n\n        setProfileUser(data);\n      };\n\n      getUserData();\n    }\n  }, [props.user]);\n  useEffect(() => {\n    const getPostData = async () => {\n      const posts = await GetPostByUserId(props.user.id); // FIX THIS\n      //console.log(posts)\n\n      setPosts(posts);\n    };\n\n    getPostData();\n  }, [props.user]);\n  console.log(posts, \"BEFORE RETURN\");\n\n  if (profileUser.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Profile Page \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), props.user.username = thisProfileUser ? \"edit\" : \"no edit\", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profileUser.profileImg,\n              alt: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: profileUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profileUser.fullname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profileUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profileUser.profileDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.image,\n              className: \"post-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: post.recipeUrl,\n                target: \"_blank\",\n                children: \"The Recipe (link)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Post, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, 'i', true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(Profile, \"flutx6HJjsU3LIx3oPfuZAiCZ9A=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/neo/seir222/unit3/pweek3/Foodle-Front/client/src/pages/Profile.js"],"names":["useParams","React","useState","useEffect","GetUserDetail","GetPostByUserId","Post","Profile","props","thisProfileUser","username","profileUser","setProfileUser","posts","setPosts","console","log","user","getUserData","data","id","getPostData","profileImg","fullname","email","profileDescription","map","post","i","image","recipeUrl","description"],"mappings":"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","sourcesContent":["\nimport { useParams } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\n// import { LoadUserDetails } from '../store/actions/UserActions'\nimport { GetUserDetail } from '../services/UserServices'\nimport { GetPostByUserId } from '../services/PostServices'\nimport Post from '../components/Post'\n\n\nconst Profile = (props) => {\n\n\n    const thisProfileUser = useParams.username\n\n    const [profileUser, setProfileUser] = useState({})\n    const [posts, setPosts] = useState([])\n    \n    console.log(props, \"PROPS\")\n    \n    useEffect(() => {\n        // e.prevent.default()\n        if(props.user){\n            const getUserData = async () => {\n                const data = await GetUserDetail(props.user.id) // FIX THIS\n                \n                setProfileUser(data)\n            }\n            getUserData()\n        }\n    }, [props.user])\n\n    useEffect(() => {\n        const getPostData = async () => {\n            const posts = await GetPostByUserId(props.user.id) // FIX THIS\n            //console.log(posts)\n            setPosts(posts)\n        }\n        getPostData()\n    }, [props.user])\n    \n    console.log(posts, \"BEFORE RETURN\")\n\n  if (profileUser.id) {\n    return(\n        <div className='user-profile'>\n            <div className='profile-wrapper'>\n                <div className='profile-banner'>\n                    <div className='profile-info'>\n                    <h1> Profile Page </h1>\n                    {props.user.username = thisProfileUser ? \"edit\" : \"no edit\"}\n                    <img src={profileUser.profileImg} alt='thumbnail' />\n                    <h2>{profileUser.username}</h2>\n                    <h3>{profileUser.fullname}</h3>\n                    <h3>{profileUser.email}</h3>\n                    <p>{profileUser.profileDescription}</p> \n                    </div>\n                    {posts.map((post, i) => (\n                        \n                        \n                        <div className='post-container' key='i'>\n                            <img src={post.image} className='post-image' />\n                            <h5><a href={post.recipeUrl} target='_blank'>The Recipe (link)</a></h5>\n                            <p>{post.description}</p>\n                            <Post post={post} />\n                        </div> \n                    ))}\n                    \n                </div>\n            </div>\n        </div>\n    )\n  } else {\n      return (\n          <div className='loading'>Loading...</div>\n      )\n  }  \n}\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}